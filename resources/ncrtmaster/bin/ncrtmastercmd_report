#!/usr/bin/perl

use strict;
use String::Random 'random_regex';
use Encode;
use Template;
use JSON::XS;
use URI::Escape;
use URI::Query;
use HTTP::Daemon;
use HTTP::Status;
use LWP::UserAgent;
use MIME::EncWords ':all';

$0 =~ m"^(.*)/";
our $TOOLHOME = "$1/..";
while( $TOOLHOME =~ s{(^|/)[^\./][^/]*/\.\.(/|$)}{} ){}
our $PLUGINSDIR = "$TOOLHOME/plugins";
our $CONFDIR = "$TOOLHOME/conf";
our $SENDMAILEXE = '/usr/lib/sendmail';

####
sub mkdir_or_die ($) {
	my ($d) = @_;
	return if -d $d;
	mkdir $d or die "$d: cannot create, stopped";
}

####
if( @ARGV < 1 ){
	print "usage: % $0 {cron|...}\n";
	exit 3;
}

# setup work directory
our $WORKDIR;
if( $ENV{'HOME'} ){ $WORKDIR = $ENV{'HOME'} . "/.ncrt"; }
else{
	my ($name, $passwd, $uid, $gid, $quota, $comment, $gcos, $home, $shell, $expire ) = getpwuid $<;
	$WORKDIR = "$home/.ncrt";
}
unless( -d $WORKDIR ){ mkdir_or_die $WORKDIR; }

####
my %conf;
my $f = "$CONFDIR/ncrtbuild.conf";
open my $h, '<', $f or do {
	die "$f: cannot open, stopped";
};
while( <$h> ){
	chomp;
	next if m"^\s*(#|$)";
	die unless m"^(\w+)=(.*)$";
	$conf{$1} = $2;
}
close $h;

my $f = "$CONFDIR/reporters";
open my $h, '<', $f or do {
	die "$f: cannot open, stopped";
};
my @reporters;
while( <$h> ){
	chomp;
	push @reporters, $_;
}
close $h;


# for debug
our $DEBUG = $conf{DEBUG} // 0;

# timestamps
sub timestamp ($) {
	my ($sec, $min, $hour, $day, $mon, $year) = localtime shift;
	return sprintf "%04d-%02d-%02d_%02d:%02d:%02d", $year+1900, $mon+1, $day, $hour, $min, $sec;
}
our $NOW = timestamp time;

####
sub safesprintf ( @ ){
	my ($format, @args) = @_;
	my $text = sprintf $format, @args;
	$text =~ s{([\x00-\x1f\x7f])}{"\\x" . unpack('H2', $1);}eg;
	return $text;
}

our $LOG_HANDLE;
sub openlog () {
	open $LOG_HANDLE, '>>', "$WORKDIR/sg_log" or return;
	my $old = select $LOG_HANDLE;
	$| = 1;
	select $old;
}

sub debuglog ( $;@ ){
	return unless $DEBUG;
	openlog unless defined $LOG_HANDLE;
	print $LOG_HANDLE timestamp(time), " ", safesprintf(@_), "\n";
}

sub errorlog ( $;@ ){
	openlog unless defined $LOG_HANDLE;
	print $LOG_HANDLE timestamp(time), " ", safesprintf(@_), "\n";
}

sub var2ltsv ( \% ){
	my ($var) = @_;
	my @ltsv;
	push @ltsv, "timestamp:".$var->{timestamp} if defined $var->{timestamp};
	foreach my $k ( sort {$a cmp $b} keys %$var ){
		next if $k eq 'timestamp';
		push @ltsv, "$k:".$var->{$k};
	}
	return join "\t", @ltsv;
}

sub ltsv2var ( $ ){
	my ($ltsv) = @_;
	my %var;
	foreach my $kv ( split m"\t", $ltsv ){
		$kv =~ m"^([-.\w]+):(.*)$" or do {
			next;
		};
		my $k = $1;
		my $v = $2;
		$var{$k} = $v;
	}
	return %var;
}

sub path_encode ($) {
	my ($text) = @_;
	$text =~ s{([\x00-\x1f/\x7f])}{"\%" . unpack('H2', $1);}eg;
	return $text;
}

sub path_decode ($) {
	my ($text) = @_;
	$text =~ s{%([0-9a-fA-F]{2})}{pack('H2', $1);}eg;
	return $text;
}

####

debuglog "execute reporter plugins...";

foreach my $e ( sort @reporters ){
	#system "$PLUGINSDIR/ncrtmaster_$e $CONFDIR $WORKDIR";
	my $r = `$PLUGINSDIR/ncrtmaster_$e $CONFDIR $WORKDIR`;
	debuglog "$PLUGINSDIR/ncrtmaster_$e: $r";
}

debuglog "complete all plugins.";

