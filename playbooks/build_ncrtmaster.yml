---

- hosts: all
  tasks:
    - include_vars: "{{WORKDIR}}/vars.yml"
      tags: [ common ]
    - include: "{{TOOLHOME}}/conf/ncrtmasters_playbook.yml"
      tags: [ common ]

    #### for Debian / Ubuntu
    - name: install packages for apt-key
      apt:
        name: [ dirmngr, nrpe-ng, pynag ]
      when: "ansible_os_family == 'Debian'"
      tags: [ common ]

    ## Naemon
    - name: add repository key
      apt_key:
        keyserver: keys.gnupg.net
        id: F8C1CA08A57B9ED7
        keyring: /etc/apt/trusted.gpg.d/labs.consol.de_key.gpg
      when: "ansible_os_family == 'Debian'"
      tags: [ common ]

    - name: add naemon repository
      apt_repository:
        repo: 'deb http://labs.consol.de/repo/stable/debian {{ansible_distribution_release}} main'
      when: "ansible_os_family == 'Debian'"
      tags: [ common ]

    - name: install naemon and dependancies
      apt:
        name:
          - naemon
          - naemon-core
          - naemon-livestatus
          - nagios-plugins
          - naemon-thruk
          - python-passlib
          - libemail-sender-perl
          - libemail-mime-perl
          - libtemplate-perl
          - libstring-random-perl
          - libmime-encwords-perl
      when: "ansible_os_family == 'Debian'"
      tags: [ common ]

    ## Naemon2Influx
    - file:
        dest:    "{{item}}"
        state:   directory
        owner:   root
        group:   root
        recurse: yes
      with_items:
          - "{{NCRTMASTERHOME}}"
          - "{{NCRTMASTERHOME}}/debs"
      when: "ansible_os_family == 'Debian'"
      tags: [ common ]

    - copy:
        dest:    "{{NCRTMASTERHOME}}/debs/{{NAEMON2INFLUX_DEB}}"
        src:     "{{TOOLHOME}}/conf/{{NAEMON2INFLUX_DEB}}"
      when: "ansible_os_family == 'Debian'"
      tags: [ common ]

    - name: install naemon2influx
      apt:
        deb:     "{{NCRTMASTERHOME}}/debs/{{NAEMON2INFLUX_DEB}}"
      when: "ansible_os_family == 'Debian'"
      tags: [ common ]

    - name: install naemon2influx
      apt:
        name: [ influxdb, influxdb-client, libwww-perl ]
      when: "ansible_os_family == 'Debian'"
      tags: [ common ]

    - name: setup Nagios / Naemon with naemon2influx
      lineinfile:
        dest: "/etc/naemon/naemon.cfg"
        regexp: "^{{item.key}}="
        line:   "{{item.key}}={{item.value}}"
        insertafter: EOF
      with_items:
        - key:   process_performance_data
          value: 1
        - key:   service_perfdata_file_processing_command
          value: ncrt-process-service-perfdata-naemon2influx
        - key:   service_perfdata_file_mode
          value: a
        - key:   service_perfdata_file_processing_interval
          value: 5
        - key:   service_perfdata_file_template
          value: '$TIMET$\t$HOSTNAME$\t$SERVICEDESC$\t$SERVICESTATE$\t$SERVICEPERFDATA$'
        - key:   service_perfdata_file
          value: /var/lib/naemon/service-perfdata
      notify: restart naemon
      when: "ansible_os_family == 'Debian'"
      tags: [ common ]

    - name: setup Nagios / Naemon with naemon2influx
      template:
        src: ncrt_naemon2influx.cfg
        dest: /etc/naemon/conf.d/ncrt_naemon2influx.cfg
      notify: restart naemon
      when: "ansible_os_family == 'Debian'"
      tags: [ common ]

    - name: setup naemon2influx
      file:
        dest: /etc/naemon/naemon2influx.cfg
        mode: 0640
        owner: naemon
        group: naemon
      notify: restart naemon
      when: "ansible_os_family == 'Debian'"
      tags: [ common ]

    - name: setup naemon2influx
      lineinfile:
        dest: /etc/naemon/naemon2influx.cfg
        regexp: "^{{item.key}}="
        line:   "{{item.key}}={{item.value}}"
        insertafter: EOF
      with_items:
        - key:   output
          value: "http://{{INFLUXDBHOST}}:{{INFLUXDBPORT}}"
        - key:   username
          value: "{{INFLUXDBUSER}}"
        - key:   password
          value: "{{INFLUXDBPASSWD}}"
      when: "ansible_os_family == 'Debian'"
      tags: [ common ]

    ## InfluxDB
    - name: install packages for influxdb client
      apt:
        name: [ python-requests, python-influxdb ]
      when: "ansible_os_family == 'Debian'"
      tags: [ common ]

    ## Grafana

    #### for All Distros

    ## InfluxDB
    - name: setup influxdb database for naemon2influx
      influxdb_database:
        hostname:      "{{INFLUXDBHOST}}"
        port:          "{{INFLUXDBPORT}}"
        username:      "{{INFLUXDBADMINUSER}}"
        password:      "{{INFLUXDBADMINPASSWD}}"
        database_name: "{{INFLUXDBDATABASE}}"
      tags: [ common ]

    - name: setup influxdb user for naemon2influx
      influxdb_user:
        hostname:      "{{INFLUXDBHOST}}"
        port:          "{{INFLUXDBPORT}}"
        username:      "{{INFLUXDBADMINUSER}}"
        password:      "{{INFLUXDBADMINPASSWD}}"
        user_name:     "{{INFLUXDBUSER}}"
        user_password: "{{INFLUXDBPASSWD}}"
      tags: [ common ]

    - name: setup influxdb for naemon2influx
      shell: "influx -host {{INFLUXDBHOST}} -port {{INFLUXDBPORT}} -username {{INFLUXDBADMINUSER}} -password \"{{INFLUXDBADMINPASSWD}}\" -execute \"grant all on naemon to naemon\""
      tags: [ common ]

    ## NCRT
    - name: setup modules in ncrt master
      synchronize:
        checksum: yes
        rsync_opts: [ "-OJ", "--chown=root:root" ]
        src: "{{TOOLHOME}}/ncrtmaster/"
        dest: "{{NCRTMASTERHOME}}/"
      tags: [ common ]

    - name: setup settings in ncrt master
      synchronize:
        checksum: yes
        delete: yes
        rsync_opts: [ "-OJ", "--chown=root:root" ]
        src: "{{WORKDIR}}/ncrtmaster/{{inventory_hostname}}/"
        dest: "{{NCRTMASTERHOME}}/conf/"
      tags: [ common ]

    - name: setup gateway accessor
      template:
        mode: 0755
        src: "ncrtmaster_gatewayaccess"
        dest: "{{NCRTMASTERHOME}}/bin/ncrtmaster_gatewayaccess"
      tags: [ common ]

    - name: setup settings in ncrt master
      template:
        src: "{{item}}"
        dest: "/etc/naemon/conf.d/{{item}}"
      with_items:
        - ncrt_naemon_commands.cfg
        - ncrt_naemon_timeperiods.cfg
      tags: [ common ]

    - name: setup nrpe server cert/key
      copy:
        dest:  /etc/ssl/certs/ncrt_cert.pem
        src:   "{{TOOLHOME}}/conf/ncrt_cert.pem"
      notify: update ssl certs
      tags: [ common ]

    - name: setup ncrtmaster_alertmessenger cron
      cron:
        name: ncrtmaster_alertmessenger cron
        user: naemon
        hour:   "*"
        minute: "*"
        job: "{{NCRTMASTERHOME}}/bin/ncrtmaster_alertmessenger cron 2>> ~/.ncrt.cronerror 1>&2"
      tags: [ common ]

    - name: setup settings in Nagios / Naemon
      shell: "test -f /etc/naemon/conf.d/{{item}} && mv /etc/naemon/conf.d/{{item}} /etc/naemon/conf.d/{{item}}.unused"
      failed_when: False
      with_items:
        - localhost.cfg
        - printer.cfg
        - switch.cfg
        - windows.cfg
      tags: [ common ]

    - name: setup settings in Nagios / Naemon
      shell: "test -f /etc/naemon/conf.d/printerlocalhost.cfg && mv /etc/naemon/conf.d/localhost.cfg /etc/naemon/conf.d/localhost.cfg.unused"
      failed_when: False
      tags: [ common ]

    - name: setup settings in Nagios / Naemon
      template:
        src: "{{WORKDIR}}/{{item}}"
        dest: "/etc/naemon/conf.d/{{item}}"
      with_items:
        - ncrt_servicetemplates.cfg
        - ncrt_services.cfg
        - ncrt_hosttemplates.cfg
        - ncrt_hosts.cfg
        - ncrt_users.cfg
        - ncrt_addresses.cfg
        - ncrt_hostgroups.cfg
        - ncrt_servicegroups.cfg
      notify: restart naemon
      tags: [ common ]

  handlers:
    - name: update ssl certs
      shell: "update-ca-certificates -f"
      tags: [ common ]

    - name: restart naemon
      service:
        name:  naemon
        state: restarted
        use:   service
      tags: [ common ]



