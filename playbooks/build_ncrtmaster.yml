---

- hosts: all
#  vars:
#    - include: "{{WORKDIR}}/vars.yml"
  tasks:
    - include_vars: "{{WORKDIR}}/vars.yml"
    - name: install packages for apt-key
      apt:
        name: [ dirmngr, nrpe-ng, pynag ]

    #### DEBUG
    - name: setup modules in ncrt master
      synchronize:
        checksum: yes
        rsync_opts: [ "-OJ", "--chown=root:root" ]
        src: "{{TOOLHOME}}/ncrtmaster/"
        dest: "{{NCRTMASTERHOME}}/"

    #### Naemon
    - name: add repository key
      apt_key:
        keyserver: keys.gnupg.net
        id: F8C1CA08A57B9ED7
        keyring: /etc/apt/trusted.gpg.d/labs.consol.de_key.gpg

    - name: add naemon repository
      apt_repository:
        repo: 'deb http://labs.consol.de/repo/stable/debian {{ansible_distribution_release}} main'

    - name: install naemon and dependancies
      apt:
        name:
          - naemon
          - naemon-core
          - naemon-livestatus
          - nagios-plugins
          - naemon-thruk
          - python-passlib

#      notify: restart naemon

#- name: set thruk admin password
#  htpasswd:
#    path: /etc/naemon/htpasswd
#    name: admin
#    password: {{thruk_admin_password}}

#    #### Nagflux
#    - file:
#        path: /opt/ncrtmaster
#        state: directory
#        owner: root
#        group: root
#
#    - name: install build tools for Nagflux
#      apt:
#        name: [ golang, golang-github-influxdb-usage-client-dev, git ]
#
#    - name: build nagfluxsetup settings in Nagios / Naemon
#      shell: "test -x /opt/ncrtmaster/bin/nagflux || ( export GOPATH=/opt/ncrtmaster ; go get -v -u github.com/griesbacher/nagflux ; go build github.com/griesbacher/nagflux )"
#      failed_when: False

    #### Naemon2Influx
    - file:
        dest:    "{{NCRTMASTERHOME}}"
        state:   directory
        owner:   root
        group:   root
        recurse: yes

    - file:
        dest:    "{{NCRTMASTERHOME}}/debs"
        state:   directory
        owner:   root
        group:   root

    - copy:
        dest:    "{{NCRTMASTERHOME}}/debs/{{NAEMON2INFLUX_DEB}}"
        src:     "{{TOOLHOME}}/conf/{{NAEMON2INFLUX_DEB}}"

    - name: install naemon2influx
      apt:
        deb:     "{{NCRTMASTERHOME}}/debs/{{NAEMON2INFLUX_DEB}}"

    - name: install naemon2influx
      apt:
        name: [ influxdb, influxdb-client, libwww-perl ]

    - name: setup Nagios / Naemon with naemon2influx
      lineinfile:
        dest: "/etc/naemon/naemon.cfg"
        regexp: "^{{item.key}}="
        line:   "{{item.key}}={{item.value}}"
        insertafter: EOF
      with_items:
        - key:   process_performance_data
          value: 1
        - key:   service_perfdata_file_processing_command
          value: ncrt-process-service-perfdata-naemon2influx
        - key:   service_perfdata_file_mode
          value: a
        - key:   service_perfdata_file_processing_interval
          value: 1500
        - key:   service_perfdata_file_template
          value: '$TIMET$\t$HOSTNAME$\t$SERVICEDESC$\t$SERVICESTATE$\t$SERVICEPERFDATA$'
        - key:   service_perfdata_file
          value: /var/lib/naemon/service-perfdata
      notify: restart naemon

    - name: setup Nagios / Naemon with naemon2influx
      template:
        src: ncrt_naemon2influx.cfg
        dest: /etc/naemon/conf.d/ncrt_naemon2influx.cfg
      notify: restart naemon

    - name: setup naemon2influx
      file:
        dest: /etc/naemon/naemon2influx.cfg
        mode: 0640
        owner: naemon
        group: naemon
      notify: restart naemon

    - name: setup influxdb for naemon2influx
      shell: "influx -execute \"create user naemon with password 'naemon'\""
      notify: restart naemon

    - name: setup influxdb for naemon2influx
      shell: "influx -execute \"create database naemon\""
      notify: restart naemon

    - name: setup influxdb for naemon2influx
      shell: "influx -execute \"grant all on naemon to naemon\""
      notify: restart naemon

    #### Grafana
    - name: fix #843263
      lineinfile:
        dest: /usr/share/grafana/public/app/app.js
        regexp: "'ang-drag-drop',"
        line:   "    //'ang-drag-drop',"

    #### NCRT
    - name: setup modules in ncrt master
      synchronize:
        checksum: yes
        rsync_opts: [ "-OJ", "--chown=root:root" ]
        src: "{{TOOLHOME}}/ncrtmaster/"
        dest: "{{NCRTMASTERHOME}}/"

    - name: setup settings in ncrt master
      synchronize:
        checksum: yes
        delete: yes
        rsync_opts: [ "-OJ", "--chown=root:root" ]
        src: "{{WORKDIR}}/ncrtmaster/{{ansible_hostname}}/"
        dest: "{{NCRTMASTERHOME}}/conf/"

    - name: setup settings in ncrt master
      template:
        src: "{{item}}"
        dest: "/etc/naemon/conf.d/{{item}}"
      with_items:
        - ncrt_naemon_commands.cfg
        - ncrt_naemon_timeperiods.cfg

    - name: setup nrpe server cert/key
      copy:
        dest:  /etc/ssl/certs/ncrt_cert.pem
        src:   "{{TOOLHOME}}/conf/ncrt_cert.pem"
      notify: update ssl certs

    - name: setup settings in Nagios / Naemon
      shell: "test -f /etc/naemon/conf.d/{{item}} && mv /etc/naemon/conf.d/{{item}} /etc/naemon/conf.d/{{item}}.unused"
      failed_when: False
      with_items:
        - localhost.cfg
        - printer.cfg
        - switch.cfg
        - windows.cfg

    - name: setup settings in Nagios / Naemon
      shell: "test -f /etc/naemon/conf.d/printerlocalhost.cfg && mv /etc/naemon/conf.d/localhost.cfg /etc/naemon/conf.d/localhost.cfg.unused"
      failed_when: False

    - name: setup settings in Nagios / Naemon
      template:
        src: "{{WORKDIR}}/{{item}}"
        dest: "/etc/naemon/conf.d/{{item}}"
      with_items:
        - ncrt_servicetemplates.cfg
        - ncrt_services.cfg
        - ncrt_hosttemplates.cfg
        - ncrt_hosts.cfg
        - ncrt_users.cfg
        - ncrt_addresses.cfg
        - ncrt_hostgroups.cfg
        - ncrt_servicegroups.cfg

  handlers:
    - name: update ssl certs
      shell: "update-ca-certificates -f"

    - name: restart naemon
      service:
        name:  naemon
        state: restarted

    - name: restart nrpe-ng
      service:
        name:  nrpe-ng
        state: restarted


