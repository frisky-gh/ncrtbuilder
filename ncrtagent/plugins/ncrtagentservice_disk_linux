#!/usr/bin/perl

use strict;

if( @ARGV < 2 ){
	print "usage: % $0 CONFDIR WORKDIR\n";
	exit 1;
}

our $CONFDIR = $ARGV[0];
our $WORKDIR = $ARGV[1];

####
sub n ($) {
	return sprintf "%.2f", $_[0];
}
sub nP ($) {
	return sprintf "%.2f%%", $_[0];
}
sub nMB ($) {
	return sprintf "%.2fMB", $_[0];
}

#### load detector conf.
my @exist_rules;
my $f = "$CONFDIR/agent/disk.rules";
open my $h, '<', $f or do {
	die "$f: cannot open, stopped";
};
while( <$h> ){
	chomp;
	next if m"^\s*(#|$)";
	die "$f:$.:$_: illegal format, stopped" unless m"^(\S+)$";
	push @exist_rules, $1;
}
close $h;

my @ignore_rules;
my $f = "$CONFDIR/agent/disk.ignores";
open my $h, '<', $f or do {
	die "$f: cannot open, stopped";
};
while( <$h> ){
	chomp;
	next if m"^\s*(#|$)";
	die "$f:$.:$_: illegal format, stopped" unless m"^(\S+)$";
	push @ignore_rules, qr"^$1$";
}
close $h;

sub match ($@) {
	my ($path, @patterns) = @_;
	foreach my $pattern ( @patterns ){
		return 1 if $path =~ $pattern;
	}
	return undef;
}

####
# data
my %disk;

# df
open my $h, '-|', "LANG=C df -P -B M" or do {
	die "df: cannot execute, stopped";
};
while( <$h> ){
	chomp;
	next if $. == 1;
	die "$_, stopped" unless m"^
		(?<source> \S+) \s+
		(?<total>  \d+)M \s+
		(?<used>   \d+)M \s+
		(?<avail>  \d+)M \s+
		(?<pct>    \d+)% \s+
		(?<target> \S.*)$"x;
	next if match $+{target}, @ignore_rules;

	$disk{$+{target}}->{total}     = nMB $+{total};
	$disk{$+{target}}->{used}      = nMB $+{used};
	$disk{$+{target}}->{avail}     = nMB $+{total} - $+{used};
	$disk{$+{target}}->{'avail-pct'} = $+{total} == 0 ? 0 :
		nP 100 * ($+{total} - $+{used}) / $+{total};
}
close $h;

open my $h, '-|', "LANG=C df -P -i" or do {
	die "df: cannot execute, stopped";
};
while( <$h> ){
	chomp;
	next if $. == 1;
	die "$_, stopped" unless m"^
		(?<source> \S+) \s+
		(?<total>  \S+) \s+
		(?<used>   \d+) \s+
		(?<avail>  \d+) \s+
		(?<pct>    \d+%) \s+
		(?<target> \S.*)$"x;
	next if match $+{target}, @ignore_rules;

	$disk{$+{target}}->{itotal}     = n $+{total};
	$disk{$+{target}}->{iused}      = n $+{used};
	$disk{$+{target}}->{iavail}     = n $+{total} - $+{used};
	$disk{$+{target}}->{'iavail-pct'} = $+{total} == 0 ? 0 :
		nP 100 * ($+{total} - $+{used}) / $+{total};
}
close $h;

foreach my $path ( @exist_rules ){
	next if exists $disk{$path};
	next if match $path, @ignore_rules;
	$disk{$path}->{total}        = nMB 0;
	$disk{$path}->{used}         = nMB 0;
	$disk{$path}->{avail}        = nMB 0;
	$disk{$path}->{'avail-pct'}  = nP 0;
	$disk{$path}->{itotal}       = n 0;
	$disk{$path}->{iused}        = n 0;
	$disk{$path}->{iavail}       = n 0;
	$disk{$path}->{'iavail-pct'} = nP 0;
}

foreach my $path ( sort keys %disk ){
	my $values = $disk{$path};
	foreach my $k ( sort keys %$values ){
		my $v = $values->{$k};
		print "disk[$path]-$k=$v\n";
	}
}

exit 0;

