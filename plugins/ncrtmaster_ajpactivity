#!/usr/bin/perl

use strict;

if( @ARGV < 5 ){
        print "usage: % $0 CONFDIR WORKDIR MEASURE HOST SERVICE\n";
        exit 1;
}

our $CONFDIR = $ARGV[0];
our $WORKDIR = $ARGV[1];
our $MEASURE = $ARGV[2];
our $VHOST = $ARGV[3];
our $VSERVICE = $ARGV[4];

####
sub ns ($) {
	return sprintf "%.2fs", $_[0];
}

sub nB ($) {
	return sprintf "%dB", $_[0];
}

#### build module
my $bin = "$WORKDIR/ajpconnect";
unless( -x $bin ){
	my $r = ` go build -o \Q$bin\E \Q$0.go\E 2>&1 `;
	chomp $r;
	exit 1 unless $r eq "";
	exit 2 unless -x $bin;
}

#### load service conf.
my %param;
my $f = "$CONFDIR/agentless/ajpactivity.conf.$VHOST.$VSERVICE";
open my $h, '<', $f or do {
	die "$f: cannot open, stopped";
};
while( <$h> ){
	chomp;
	next if m"^\s*($|#)";
	die "$f:$.: illegal format, stopped" unless m"^(\w+)=(.*)";
	$param{$1} = $2;
}
close $h;

my $url = $param{URL};
unless( $url =~ m"^http(s)?://(?:([^\s:]+):([^\s\@]*)\@)?([-0-9a-zA-Z.]+)(?::(\d+))?((/[^\s\?]*)?(?:\?(\S*))?)$" ){
	die "url: invalid format, stopped";
}

my %d;
open my $h, '-|', "$bin \Q$url\E" or do {
	die "$f: cannot execute, stopped";
};
my $status_line = <$h>;
my ($status_code, $status_message) = $status_line =~ m"^AJP/\S+ (\d+) (.*)";
my $here_is_header = 1;
my %header;
my $body;
while(<$h>){
	if    ( $here_is_header && m"^\s*$" ){
		$here_is_header = undef;
		next;
	}elsif( $here_is_header && m"^([-\w]+):\s*(.*)$" ){
		$header{$1} = $2;
		next;
	}
	$body .= $_;
}
close $h;

if( $status_line ne "" ){
	print "ajp[$VSERVICE]-response-failure=0\n";
}else{
	print "ajp[$VSERVICE]-response-failure=1\n";
}

if( $header{Elapsed} ne "" ){
	print "ajp[$VSERVICE]-elapsed-sec=", ns($header{Elapsed}), "\n";
}else{
	print "ajp[$VSERVICE]-elapsed-sec=-1\n";
}

if( $header{"Content-Length"} ne "" ){
	print "ajp[$VSERVICE]-size=", nB($header{"Content-Length"}), "\n";
}else{
	print "ajp[$VSERVICE]-size=-1\n";
}

if( $param{StatusCode} ne "" ){
	if( $status_code == $param{StatusCode} ){
		print "ajp[$VSERVICE]-status-failure=0\n";
	}else{
		print "ajp[$VSERVICE]-status-failure=1\n";
	}
}

if( $param{ResponseBody} ne "" ){
	my $regexp = $param{ResponseBody};
	if( $body =~ m"$regexp" ){
		print "ajp[$VSERVICE]-body-failure=0\n";
	}else{
		print "ajp[$VSERVICE]-body-failure=1\n";
	}
}

exit 0;

