#!/usr/bin/perl

use strict;

if( @ARGV < 2 ){
	print "usage: % $0 CONFDIR WORKDIR\n";
	exit 1;
}

our $CONFDIR = $ARGV[0];
our $WORKDIR = $ARGV[1];

#### load global conf.
my %ncrtconf;
my $f = "$CONFDIR/ncrtbuild.conf";
open my $h, '<', $f or do {
	die "$f: cannot open, stopped";
};
while( <$h> ){
	chomp;
	next if m"^\s*(#|$)";
	die unless m"^(\w+)=(.*)$";
	$ncrtconf{$1} = $2;
}
close $h;

#### load ncrt masters conf.
my @ncrtmasters;
my $f = "$CONFDIR/master.hosts";
open my $h, '<', $f or do {
	die "$f: cannot open, stopped";
};
while( <$h> ){
	chomp;
	next if m"^\s*(#|$)";
	push @ncrtmasters, $_;
}
close $h;

#### load service conf.
my $f = "$CONFDIR/indirect/ltsv.conf";
open my $h, '<', $f or do {
	die "$f: cannot open, stopped";
};
my $vhost;
my $vservice;
my %vhost2vservice;
while( <$h> ){
	chomp;
	next if m"^\s*(#|$)";
	if( m"^===\s+(\S+)\s+(\S+)\s+===$" ){
		$vhost = $1;
		$vservice = $2;
	}elsif( m"^(\w+=\S*)$" ){
		#
	}elsif( m"^
		(\S+)\s+(/\S*)\s+(\S+)
	$"x ){
		my $host = $1;
		my $path = $2;
		my $fieldpattern = $3;
		$vhost2vservice{$vhost}->{$vservice} = 1;
	}else{
		die "$f:$.: illegal format, stopped";
	}
}
close $h;

#### append service info.
my $f = "$WORKDIR/measures";
open my $h, '>>', $f or do {
	die "$f: cannot open, stopped";
};
print $h "ltsv	indirect\n";
close $h;

#### append conf info.
my $f = "$WORKDIR/measure2conf";
open my $h, '>>', $f or do {
	die "$f: cannot open, stopped";
};
print $h "ltsv	indirect/ltsv.conf\n";
close $h;

#### append service mapping
my $f = "$WORKDIR/host2service2measure";
open my $h, '>>', $f or do {
	die "$f: cannot open, stopped";
};

while( my ($vhost, $vservices) = each %vhost2vservice ){
	foreach my $vservice ( sort keys %$vservices ){
		print $h "$vhost	$vservice	ltsv\n";
	}
}
close $h;




