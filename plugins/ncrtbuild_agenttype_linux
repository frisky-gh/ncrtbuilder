#!/usr/bin/perl

use strict;

if( @ARGV < 2 ){
	print "usage: % $0 CONFDIR WORKDIR\n";
	exit 1;
}

our $CONFDIR = $ARGV[0];
our $WORKDIR = $ARGV[1];

#### functions.

sub system_or_die ($) {
	my ($cmd) = @_;
	my $r = system $cmd;
	if   ($? == -1){
		die sprintf "%s: failed to execute: %d, stopped",
			$cmd, $!;
	}elsif($? & 127){
		die sprintf
			"%s: child died with signal %d, %s coredump, stopped",
			$cmd, ($? & 127), ($? & 128) ? 'with' : 'without';
	}elsif( ($?>>8) != 0){
		 die sprintf "%s: child exited with value %d, stopped",
			$cmd, $? >> 8;
	}
}

#### load global conf.
my %ncrtconf;
my $f = "$CONFDIR/ncrtbuild.conf";
open my $h, '<', $f or do {
	die "$f: cannot open, stopped";
};
while( <$h> ){
	chomp;
	next if m"^\s*(#|$)";
	die unless m"^(\w+)=(.*)$";
	$ncrtconf{$1} = $2;
}
close $h;

#### load linux conf.
my %host2params;
my %default = (
	listen_address => "0.0.0.0",
	listen_port => 46848,
	daemon_user => "ncrtagent",
	timeout => 60,
	agent_protocol => 'ncrtagent',
	agent_address => undef,
	agent_port => 46848,
);

my $f = "$CONFDIR/agenttype/linux.hosts";
open my $h, '<', $f or do {
	die "$f: cannot open, stopped";
};
while( <$h> ){
	chomp;
	next if m"^\s*(#|$)";
	die unless m"^(\*|[-.\w]+)((\s+\w+=\S*)*)$";
	my $host = $1;
	my %param;
	foreach my $kv ( split m"\s+", $2 ){
		next unless $kv =~ m"^(\w+)=(.*)$";
		$param{$1} = $2;
	}

	if( $host eq "*" ){
		%default = %param;
	}else{
		$host2params{$host} = { %default, %param };
	}
}
close $h;

my %global_settings = ();
my $f = "$CONFDIR/agenttype/linux.conf";
if( open my $h, '<', $f ){
	while( <$h> ){
		chomp;
		next if m"^\s*(#|$)";
		die "$f:$.: illegal format, stopped"  unless m"^(\w+)=(.*)$";
		$global_settings{$1} = $2;
	}
	close $h;
}

#### append hosts info.
my $f = "$WORKDIR/agenthosts";
open my $h, '>>', $f or do {
	die "$f: cannot open, stopped";
};
while( my ($host, $params) = each %host2params ){
	my @params;
	while( my ($k, $v) = each %$params ){
		push @params, "$k=$v";
	}
	print $h "$host	linux	", join("\t", @params), "\n";
}
close $h;

#### append agenttype info.
my $f = "$WORKDIR/agenttypes";
open my $h, '>>', $f or do {
	die "$f: cannot open, stopped";
};
print $h "linux	display_name=Linux:<hostname> address=<hostname> check_command=ncrtmaster_ping\n";
close $h;

#### create agent base directories.

while( my ($host, $params) = each %host2params ){
	system_or_die "rsync -aJUSvx $0.d/ $WORKDIR/ncrtmaster/$h/";
	system_or_die "rsync -aJUSvx $CONFDIR/../lib/ $WORKDIR/ncrtmaster/$h/lib/";
}

#### Playbooks typically cannot read setting files (KEY=VALUE format).
#### Plugin scripts may convert settings to YAML-formatted files.
#### You can place YAML-formatted configuration files in ncrtbuild working dir and name them "plugin_PLUGINNAME_XXX.yml" to prevent conflicts between each configuration file.

#### pass settings to the playbook of this plugin
my $f = "$WORKDIR/plugin_agenttype_linux_vars.yml";
open my $h, '>', $f or do {
	die "$f: cannot open, stopped";
};
while( my ($k, $v) = each %global_settings ){
	print $h "  '$k' : '$v'\n";
}
print $h "  'host' :\n";
foreach my $host ( sort keys %host2params ){
	my %params = %{ $host2params{$host} };
	foreach my $k ( sort keys %params ){
		my $v = $params{$k};
		print $h "    '$k' : '$v'\n";
	}
}
close $h;


